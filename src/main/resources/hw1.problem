% Homework 1. Metamodeling.
% Please use the following names for the concepts in the homework.

% Camera  communicatesWith ComputerInstance computerRepository computers ComputerType
% computerType Controller CPS CPSModel dependsOnSpecificSoftware designs
% directAlarmConnection directSensorConnection extraHardware FireAlarm Hardware
% HeatController installedSoftwares LightController Sensor SmokeDetector SoftwareInstance
% softwareRepository SoftwareType softwareType Thermometer VideoCard

% % Write your metamodel below this



% % Please do not modify anything below this line. Do not delete this line!

% % Stage 1.

% % Close world assumption 1.
% !exists(CPSModel::new).
% !exists(SoftwareType::new).
% default !softwareRepository(*,*).
% default !dependsOnSpecificSoftware(*,*).

% % Instance model 1.
% CPSModel(model).
% /**
%     There are two kinds of Operating Systems in the repository.
% */
% softwareRepository(model,raspberryPiOS).
% softwareRepository(model,fedoraLinux).
% /**
%     There are multiple image processing softwares.
% */
% softwareRepository(model,yolov8).
% softwareRepository(model,yolov10).
% softwareRepository(model,openCV).
% dependsOnSpecificSoftware(yolov8,fedoraLinux).
% dependsOnSpecificSoftware(yolov10,fedoraLinux).
% dependsOnSpecificSoftware(openCV,fedoraLinux).
% /**
%     There os a java-based control panel system, that works everywhere.
% */
% softwareRepository(model,openHAB).

% % Stage 2.

% % Close world assumption 2.
% !exists(ComputerType::new).
% !exists(ComputerInstance::new).
% default !computerType(*,*).

% % Instance model 2.
% /**
%     There are multiple versions of raspberry computers.
%     The PC describes a generic desktop computer; no details are
%     added at the current stage.
% */
% computerRepository(model,raspberryPi3).
% computerRepository(model,raspberryPi4).
% computerRepository(model,raspberryPi5).
% computerRepository(model,raspberryPi5).
% computerRepository(model,pc).

% /**
%     myHome is the CPS system of the intelligent house
% */
% designs(model,myHome).

% /**
%     Everything is controlled by a central pc computer called server.
% */
% computers(myHome, server).
% computerType(server,pc).

% /**
%     There are two computers with cameras and light controllers.
% */
% computers(myHome, cam1Computer).
% computerType(cam1Computer,raspberryPi5).
% computers(myHome, cam2Computer).
% computerType(cam2Computer,raspberryPi5).

% /**
%     There is a temperature controller responsible for heating.
% */
% computers(myHome, temperatureController).
% computerType(temperatureController,raspberryPi5).

% % Stage 3.

% % Close world assumption 3.
% !exists(SoftwareInstance::new).
% default !softwareType(*,*).
% default !installedSoftwares(*,*).

% % Instance model 3.

% installedSoftwares(server,imageProcessing).
% softwareType(imageProcessing,yolov8).
% installedSoftwares(server,serverOS).
% softwareType(serverOS,fedoraLinux).

% installedSoftwares(cam1Computer, cam1OS).
% softwareType(cam1OS,raspberryPiOS).

% installedSoftwares(cam2Computer, cam2OS).
% softwareType(cam2OS,raspberryPiOS).

% installedSoftwares(temperatureController, temperatureOS).
% softwareType(temperatureOS,raspberryPiOS).

% % Stage 4.

% % Close world assumption 4.
% !exists(Camera::new).
% !exists(Thermometer::new).
% !exists(SmokeDetector::new).
% !exists(HeatController::new).
% !exists(LightController::new).
% !exists(FireAlarm::new).
% !exists(VideoCard::new).

% default !extraHardware(*,*).

% % Instance model 4.

% extraHardware(server,nvidiaCard).
% VideoCard(nvidiaCard).
% extraHardware(server, fireAlarm).
% FireAlarm(fireAlarm).

% extraHardware(cam1Computer,camera1).
% Camera(camera1).
% extraHardware(cam1Computer,light1).
% LightController(light1).
% extraHardware(cam1Computer,thermometer1).
% Thermometer(thermometer1).

% extraHardware(cam2Computer,camera2).
% Camera(camera2).
% extraHardware(cam2Computer,light2).
% LightController(light2).
% extraHardware(cam2Computer,thermometer2).
% Thermometer(thermometer2).

% extraHardware(temperatureController,heatController).
% HeatController(heatController).
% extraHardware(temperatureController,smokeDetector).
% SmokeDetector(smokeDetector).

% % Stage 5.

% % Close world assumption 5.
% default !directSensorConnection(*,*).
% default !directAlarmConnection(*,*).
% default !communicatesWith(*,*).

% % Instance model 5.
% /**
%     In the network, every computer communicates with the server.
% */
% communicatesWith(server, cam1Computer).
% communicatesWith(cam1Computer, server).
% communicatesWith(server, cam2Computer).
% communicatesWith(cam2Computer, server).
% communicatesWith(server, temperatureController).
% communicatesWith(temperatureController, server).

% /**
%     Additionally, there is a direct link between the alarm
%     and the smoke detector.
% */
% directSensorConnection(fireAlarm,smokeDetector).
% directAlarmConnection(smokeDetector,fireAlarm).